{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction a sample tutorial developing nodejs and deploy it to IBM Cloud Private 3.2.0 which is based on Kubernetes.","title":"Introduction"},{"location":"#introduction","text":"a sample tutorial developing nodejs and deploy it to IBM Cloud Private 3.2.0 which is based on Kubernetes.","title":"Introduction"},{"location":"hands-on/","text":"Introduction In this hands on exercise, you will learn how to build a docker image how to push an image to a private repo how to deploy an container in kubernetes platform About the application this is a nodejs application that calls httpbin.org API and you can then use Clone the project which contains the nodeJS that call service in httpbin.org On your machine ensure you have your pre-requisite installed test the application npm install npm test build the image docker build . -t <image-name>:<image-tag> test the image docker run -e CONTAINER_PORT='3000' -e TARGET_URL='https://httpbin.org/' -e TARGET_URI='delay/1' -p 5000:3000 js-httpbin:2.0 <image-name>:<image-tag> tag the image for ICP docker tag js-httpbin:2.0 mycluster.icp:8500/<namespace>/<image-name>:<image-tag> push the image to kubernetes platform edit /etc/hosts to map mycluster.icp to ICP IP address and configure docker to use insecure login docker login mycluster.icp:8500 docker push mycluster.icp:8500/<namespace>/<image-name>:<image-tag> run the image kubectl apply -f ./k8s/httpbin.yaml Further exercise modify the application tag image new version test it push image to kubernetes platform scale it update the application to new version of image rollback","title":"Hands-on"},{"location":"hands-on/#introduction","text":"In this hands on exercise, you will learn how to build a docker image how to push an image to a private repo how to deploy an container in kubernetes platform","title":"Introduction"},{"location":"hands-on/#about-the-application","text":"this is a nodejs application that calls httpbin.org API and you can then use Clone the project which contains the nodeJS that call service in httpbin.org","title":"About the application"},{"location":"hands-on/#on-your-machine","text":"ensure you have your pre-requisite installed test the application npm install npm test build the image docker build . -t <image-name>:<image-tag> test the image docker run -e CONTAINER_PORT='3000' -e TARGET_URL='https://httpbin.org/' -e TARGET_URI='delay/1' -p 5000:3000 js-httpbin:2.0 <image-name>:<image-tag> tag the image for ICP docker tag js-httpbin:2.0 mycluster.icp:8500/<namespace>/<image-name>:<image-tag> push the image to kubernetes platform edit /etc/hosts to map mycluster.icp to ICP IP address and configure docker to use insecure login docker login mycluster.icp:8500 docker push mycluster.icp:8500/<namespace>/<image-name>:<image-tag> run the image kubectl apply -f ./k8s/httpbin.yaml","title":"On your machine"},{"location":"hands-on/#further-exercise","text":"modify the application tag image new version test it push image to kubernetes platform scale it update the application to new version of image rollback","title":"Further exercise"},{"location":"prepare/","text":"Development environment Ensure your development environment has the following docker where you can build, run, push/pull images install node and npm IBM Cloud Private tools install cloudctl install kubectl Verify your setup node -v npm -v","title":"Prepare"},{"location":"prepare/#development-environment","text":"Ensure your development environment has the following docker where you can build, run, push/pull images install node and npm IBM Cloud Private tools install cloudctl install kubectl","title":"Development environment"},{"location":"prepare/#verify-your-setup","text":"node -v npm -v","title":"Verify your setup"},{"location":"topics/","text":"Introduction We will do a quick overview of the following and have a hands-on of working with a simple application name NodeJS. Containers Kubernetes Microservice Microservice Architecture DevOps Resources Code patterns IBM Architexture Center Istio : Connect, secure, control, and observe services. Knative : Kubernetes-based platform to build, deploy, and manage modern serverless workloads. Kabanero : modern microservices-based framework that provides end-to-end solution that enables you to architect, build, deploy, and manage the lifecycle of Kubernetes-based applications","title":"Topics"},{"location":"topics/#introduction","text":"We will do a quick overview of the following and have a hands-on of working with a simple application name NodeJS. Containers Kubernetes Microservice Microservice Architecture DevOps","title":"Introduction"},{"location":"topics/#resources","text":"Code patterns IBM Architexture Center Istio : Connect, secure, control, and observe services. Knative : Kubernetes-based platform to build, deploy, and manage modern serverless workloads. Kabanero : modern microservices-based framework that provides end-to-end solution that enables you to architect, build, deploy, and manage the lifecycle of Kubernetes-based applications","title":"Resources"}]}